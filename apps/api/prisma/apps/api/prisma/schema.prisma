datasource db { provider = "postgresql"; url = env("DATABASE_URL") }
generator client { provider = "prisma-client-js" }

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  passwordHash String
  role      Role     @default(RIDER)
  driver    Driver?
  bookings  Booking[]
  ratings   Rating[] @relation("ratingsByRider")
}

model Driver {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  vehicles  Vehicle[]
  trips     Trip[]
}

model Vehicle {
  id       String  @id @default(cuid())
  driverId String
  driver   Driver  @relation(fields: [driverId], references: [id])
  make     String
  model    String
  year     Int
  plate    String
  photos   String[]
}

model Trip {
  id         String   @id @default(cuid())
  driverId   String
  driver     Driver   @relation(fields: [driverId], references: [id])
  fromCity   String
  toCity     String
  departAt   DateTime
  price      Int
  seatsTotal Int
  seatsLeft  Int
  status     TripStatus @default(ACTIVE)
  bookings   Booking[]
}

model Booking {
  id       String   @id @default(cuid())
  tripId   String
  trip     Trip     @relation(fields: [tripId], references: [id])
  riderId  String
  rider    User     @relation(fields: [riderId], references: [id])
  seats    Int      @default(1)
  status   BookingStatus @default(PENDING)
  payment  Payment?
  rating   Rating?
}

model Payment {
  id        String  @id @default(cuid())
  bookingId String  @unique
  booking   Booking @relation(fields: [bookingId], references: [id])
  amount    Int
  provider  String
  status    PaymentStatus
  ref       String?
}

model Rating {
  id        String @id @default(cuid())
  bookingId String @unique
  booking   Booking @relation(fields: [bookingId], references: [id])
  riderId   String
  rider     User   @relation("ratingsByRider", fields: [riderId], references: [id])
  stars     Int
  comment   String?
}

enum Role { RIDER DRIVER ADMIN }
enum TripStatus { ACTIVE CANCELLED COMPLETED }
enum BookingStatus { PENDING ACCEPTED REJECTED CANCELLED }
enum PaymentStatus { INITIATED PAID FAILED REFUNDED }
